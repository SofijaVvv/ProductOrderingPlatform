
services:

  rabbitmq:
    image: rabbitmq:3-management
    ports:
      - "5672:5672"
      - "15672:15672"
    healthcheck:
      test: [ "CMD", "rabbitmq-diagnostics", "status" ]
      interval: 10s
      timeout: 5s
      retries: 3

  mysql-db:
    image: mysql:8.0
    environment:
      MYSQL_ROOT_PASSWORD: Your_password123
      MYSQL_DATABASE: OrderServiceDb
    ports:
      - "3307:3306"
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "--password=Your_password123"]
      interval: 10s
      timeout: 5s
      retries: 3

  mongo-db:
    image: mongo:8.0
    ports:
      - "27018:27017"
    command: ["--setParameter", "storageEngineConcurrentWriteTransactions=128"]
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh localhost:27017/test --quiet
      interval: 10s
      timeout: 5s
      retries: 3

  orderservice:
    build:
      context: ./OrderService
      dockerfile: Dockerfile
    image: orderservice:latest
    ports:
      - "5001:8080"
    depends_on:
      mysql-db:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ConnectionStrings__OrderServiceDb=Server=mysql-db;Port:3307;Database=OrderServiceDb;User=root;Password=Your_password123
      - RabbitMq__Host=rabbitmq
      - RabbitMq__QueueName=paymentQueueStatus
      - RabbitMq__UserName=guest
      - RabbitMq__Password=guest
    entrypoint: ["sh", "-c", "dotnet OrderService.Api.dll"]

  productservice:
    build:
      context: ./ProductService
      dockerfile: Dockerfile
    image: productservice:latest
    ports:
      - "5002:8080"
    depends_on:
      mongo-db:
        condition: service_healthy
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ConnectionStrings__ProductServiceDb=mongodb://mongo-db:27017/ProductServiceDb
    entrypoint: ["sh", "-c", "sleep 10 && dotnet ProductService.Api.dll"]

  paymentservice:
    build:
      context: ./PyamentService
      dockerfile: Dockerfile
    image: paymentservice:latest
    ports:
      - "5003:8080"
    depends_on:
      mysql-db:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ConnectionStrings__PaymentServiceDb=Server=mysql-db;Port:3307;Database=PaymentServiceDb;User=root;Password=Your_password123
      - RabbitMq__Host=rabbitmq
      - RabbitMq__QueueName=paymentQueueStatus
      - RabbitMq__UserName=guest
      - RabbitMq__Password=guest
    entrypoint: ["sh", "-c", "dotnet PaymentService.Api.dll"]
